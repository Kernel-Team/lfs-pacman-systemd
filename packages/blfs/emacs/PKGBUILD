#-*-mode:sh-*-
# Maintainer: alexforsale@yahoo.com
BRANCH=master
pkgname=emacs
pkgver=27.0.50.138477
pkgrel=1
pkgdesc="GNU Emacs. Development."
arch=('x86_64')
url="http://www.gnu.org/software/emacs/"
license=('GPL3')
_deps=('alsa-lib' 'gnutls' 'libxml2' 'clang' 'lld' 'dbus' 'hicolor-icon-theme' 'libxinerama' 'libxrandr' 'lcms2' 'librsvg' 'xaw3d' 'gtk2'
       'gtk3' 'gpm' 'm17n-lib' 'libotf' 'libmagick6' 'libjpeg-turbo' 'giflib' 'webkit2gtk' 'mailutils' 'krb5' 'libxpm' 'libpng'
       'libsystemd' 'libxft' 'jansson' 'libtiff')
depends=('zlib')
_makedeps=('texlive-core')
makedepends=('git')
source=("emacs-git::git+https://github.com/emacs-mirror/emacs.git#branch=$BRANCH"
        'games.sysusers')
provides=('emacs')
groups=('blfs' 'editors')

if [[ $(pacman -Qq texlive-core 2>/dev/null) ]];then
    pkgname+=( emacs-docs)
fi

for _d in "${_deps[@]}";do
    if [[ "$(pacman -Qq "${_m}" 2>/dev/null)" ]];then
        depends+=( "${_d}")
        pkgrel=$((pkgrel+1))
    else
        optdepends+=( "${_d}")
    fi
done
for _m in "${_makedeps[@]}";do
    if [[ "$(pacman -Qq "${_m}" 2>/dev/null)" ]];then
        makedepends+=( "${_m}")
        pkgrel=$((pkgrel+1))
    else
        optdepends+=( "${_m}")
    fi
done

if [[ $BRANCH = "master" ]]; then
    pkgver() {
        cd "$srcdir/emacs-git"

        printf "%s.%s" \
               "$(grep AC_INIT configure.ac | \
      sed -e 's/^.\+\ \([0-9]\+\.[0-9]\+\.[0-9]\+\?\).\+$/\1/')" \
               "$(git rev-list --count HEAD)"
    }
else
    pkgver() {
        cd "$srcdir/emacs-git"

        printf "%s.%s" \
               "$(grep AC_INIT configure.ac | \
      awk '{split($0,a,","); print a[2]}' | \
      sed -e 's/\ //g' )" \
               "$(git rev-list --count HEAD)"
    }
fi

# There is no need to run autogen.sh after first checkout.
# Doing so, breaks incremental compilation.
prepare() {
    cd "$srcdir/emacs-git"
    [[ -x configure ]] || ( ./autogen.sh git && ./autogen.sh autoconf )

    local _conf=(
        --prefix=/usr
        --sysconfdir=/etc
        --libexecdir=/usr/lib
        --localstatedir=/var
        --mandir=/usr/share/man
        --with-gameuser=:games
        --with-modules
        # Beware https://debbugs.gnu.org/cgi/bugreport.cgi?bug=25228
        # dconf and gconf break font settings you set in ~/.emacs.
        # If you insist you'll need to play gymnastics with
        # set-frame-font and set-menu-font. Good luck!
        --without-gconf
        --without-gsettings
    )

    if [[ "$(pacman -Qq clang 2>/dev/null)" ]] &&
           [[ "$(pacman -Qq lld 2>/dev/null)" ]];then
        export CC=/usr/bin/clang ;
        export CXX=/usr/bin/clang++ ;
        export CPP="/usr/bin/clang -E" ;
        export LDFLAGS+=' -fuse-ld=lld' ;
        export LD=/usr/bin/ld.gold
        export LDFLAGS+=" -fuse-ld=gold";
        makedepends+=( 'clang' 'lld') ;
        _conf+=( '--enable-autodepend');
    fi

    if [[ ! "$(pacman -Qq xaw3d 2>/dev/null)" ]];then
        _conf+=( '--without-xaw3d' '--with-x-toolkit=no');
    fi
    if [[ ! "$(pacman -Qq libtiff 2>/dev/null)" ]];then
        _conf+=( '--without-tiff');
    fi
    if [[ ! "$(pacman -Qq gpm 2>/dev/null)" ]];then
        _conf+=( '--without-gpm');
    fi
    if [[ ! "$(pacman -Qq m17n-lib 2>/dev/null)" ]];then
        _conf+=( '--without-m17n-flt');
    fi
    if [[ "$(pacman -Qq libmagick6 2>/dev/null)" ]];then
        _conf+=( '--with-imagemagick');
        export PKG_CONFIG_PATH=/usr/lib/imagemagick6/pkgconfig;
    else
        _conf+=( '--without-imagemagick');
    fi
    if [[ "$(pacman -Qq cairo 2>/dev/null)" ]];then
        _conf+=( '--with-cairo');
    fi
    if [[ "$(pacman -Qq mailutils 2>/dev/null)" ]];then
        _conf+=( '--with-mailutils');
    fi
    if [[ "$(pacman -Qq krb5 2>/dev/null)" ]];then
        _conf+=( '--with-kerberos5');
    fi
    if [[ ! "$(pacman -Qq libxpm 2>/dev/null)" ]];then
        _conf+=( '--without-xpm');
    fi
    if [[ ! "$(pacman -Qq libjpeg-turbo 2>/dev/null)" ]];then
        _conf+=( '--without-jpeg');
    fi
    if [[ ! "$(pacman -Qq giflib 2>/dev/null)" ]];then
        _conf+=( '--without-gif');
    fi
    if [[ ! "$(pacman -Qq libpng 2>/dev/null)" ]];then
        _conf+=( '--without-png');
    fi
    if [[ ! "$(pacman -Qq librsvg 2>/dev/null)" ]];then
        _conf+=( '--without-rsvg');
    fi
    if [[ ! "$(pacman -Qq lcms2 2>/dev/null)" ]];then
        _conf+=( '--without-lcms2');
    fi
    if [[ ! "$(pacman -Qq libsystemd 2>/dev/null)" ]];then
        _conf+=( '--without-libsystemd');
    fi
    if [[ ! "$(pacman -Qq libxml2 2>/dev/null)" ]];then
        _conf+=( '--without-xml2');
    fi
    if [[ ! "$(pacman -Qq libxft 2>/dev/null)" ]];then
        _conf+=( '--without-xft');
    fi
    if [[ ! "$(pacman -Qq libotf 2>/dev/null)" ]];then
        _conf+=( '--without-libotf');
    fi
    if [[ ! "$(pacman -Qq dbus 2>/dev/null)" ]];then
        _conf+=( '--without-dbus');
    fi
    if [[ "$(pacman -Qq alsa-lib 2>/dev/null)" ]];then
        _conf+=( '--with-sound=alsa');
    fi
    if [[ "$(pacman -Qq gtk3 2>/dev/null)" ]];then
        _conf+=( '--with-xwidgets');
    fi

    ./configure "${_conf[@]}"
}

build(){
    cd "$srcdir/emacs-git"
    make

    if [[ $(pacman -Qq texlive-core 2>/dev/null) ]];then
        make html
        make pdf
    fi
}

package_emacs(){
    cd "$srcdir/emacs-git"
    make DESTDIR="$pkgdir/" install

    # remove conflict with ctags package
    mv "$pkgdir"/usr/bin/{ctags,ctags.emacs}
    mv "$pkgdir"/usr/share/man/man1/{ctags.1.gz,ctags.emacs.1.gz}

    # remove conflict with texinfo
    rm "$pkgdir"/usr/share/info/info.info.gz

    # fix user/root permissions on usr/share files
    find "$pkgdir"/usr/share/emacs/ | xargs chown root:root

    # fix permssions on /var/games
    mkdir -p "$pkgdir"/var/games/emacs
    chmod 775 "$pkgdir"/var/games
    chmod 775 "$pkgdir"/var/games/emacs
    chown -R root:60 "$pkgdir"/var/games

    install -Dm644 $srcdir/games.sysusers  ${pkgdir}/usr/lib/sysusers.d/games.conf
}

package_emacs-docs() {
    pkgdesc="GNU Emacs, built from git sources â€” HTML and PDF documentation package."
    provides=('emacs-docs')
    conflicts=('emacs-docs')

    cd "$srcdir/emacs-git"

    make DESTDIR="$pkgdir/" install-html
    make DESTDIR="$pkgdir/" install-pdf
}

md5sums=('SKIP'
         '5b35cdbc865d15a04e1fb5f8099b6573')
