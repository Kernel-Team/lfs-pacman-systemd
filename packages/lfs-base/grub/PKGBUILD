#-*-mode:sh-*-
# Maintainer: alexforsale@yahoo.com

## "1" to enable IA32-EFI build, "0" to disable
_IA32_EFI_IN_ARCH_X64="1"

## "1" to enable EMU build, "0" to disable
_GRUB_EMU_BUILD="0"

[[ "${CARCH}" == "x86_64" ]] && _EFI_ARCH="x86_64"
[[ "${CARCH}" == "i686" ]] && _EFI_ARCH="i386"

[[ "${CARCH}" == "x86_64" ]] && _EMU_ARCH="x86_64"
[[ "${CARCH}" == "i686" ]] && _EMU_ARCH="i386"

_UNIFONT_VER="12.1.02"

pkgname="grub"
pkgdesc="GNU GRand Unified Bootloader (2)"
pkgver=2.04
pkgrel=1
backup=('boot/grub/grub.cfg'
        'etc/default/grub'
        'etc/grub.d/40_custom')
arch=('x86_64')
license=('GPL3')
url="https://www.gnu.org/software/grub/"
options=('!makeflags')
conflicts=('grub-common' 'grub-bios' 'grub-emu' "grub-efi-${_EFI_ARCH}" 'grub-legacy')
replaces=('grub-common' 'grub-bios' 'grub-emu' "grub-efi-${_EFI_ARCH}")
provides=('grub-common' 'grub-bios' 'grub-emu' "grub-efi-${_EFI_ARCH}")
_deps=('device-mapper')
_makedeps=('rsync' 'freetype2' 'ttf-dejavu' 'autogen' 'texinfo' 'help2man' 'device-mapper' 'fuse2')
depends=('sh' 'xz' 'gettext')
makedepends=('xz' 'python' 'gettext')
optdepends=('freetype2: For grub-mkfont usage'
            'fuse2: For grub-mount usage'
            'dosfstools: For grub-mkrescue FAT FS and EFI support'
            'efibootmgr: For grub-install EFI support'
            'libisoburn: Provides xorriso for generating grub rescue iso using grub-mkrescue'
            'os-prober: To detect other OSes when generating grub.cfg in BIOS systems'
            'mtools: For grub-mkrescue FAT FS support')
install="${pkgname}.install"
validpgpkeys=('E53D497F3FA42AD8C9B4D1E835A93B74E82E4209'  # Vladimir 'phcoder' Serbinenko <phcoder@gmail.com>
              '95D2E9AB8740D8046387FD151A09227B1F435A33') # Paul Hardy <unifoundry@unifoundry.com>
source=("https://ftp.gnu.org/gnu/${pkgname}/${pkgname}-${pkgver}.tar.xz"{,.sig}
        "https://ftp.gnu.org/gnu/unifont/unifont-${_UNIFONT_VER}/unifont-${_UNIFONT_VER}.bdf.gz"{,.sig}
        'grub.default'
        'grub.cfg'
       )
groups=(lfs-base)

for _d in ${_deps[@]};do
    if [[ -n "$(pacman -Qq "${_d}" 2>/dev/null)" ]];then
        depends+=( "${_d}")
        pkgrel=$((pkgrel+1))
    else
        optdepends+=( "${_d}")
    fi
done
for _c in ${_makedeps[@]};do
    if [[ -n "$(pacman -Qq "${_c}" 2>/dev/null)" ]];then
        makedepends+=( "${_c}")
    else
        optdepends+=( "${_c}")
    fi
done

if [[ "${_GRUB_EMU_BUILD}" == "1" ]]; then
    makedepends+=('libusbx' 'sdl')
    optdepends+=('libusbx: For grub-emu USB support'
                 'sdl: For grub-emu SDL support')
fi


prepare() {
    cd "${srcdir}/grub-${pkgver}/"

    msg "Fix OS naming FS#33393"
    sed 's|GNU/Linux|Linux|' -i "util/grub.d/10_linux.in"

    if [[ $(pacman -Qq rsync 2>/dev/null) ]];then
        msg "Pull in latest language files"
        ./linguas.sh
        echo
    fi

    msg "Remove not working langs which need LC_ALL=C.UTF-8"
    sed -e 's#en@cyrillic en@greek##g' -i "po/LINGUAS"

    msg "Avoid problem with unifont during compile of grub"
    # http://savannah.gnu.org/bugs/?40330 and https://bugs.archlinux.org/task/37847
    gzip -cd "${srcdir}/unifont-${_UNIFONT_VER}.bdf.gz" > "unifont.bdf"

    local _configure_options=('--prefix=/usr'
                              '--sbindir=/sbin'
                              '--sysconfdir=/etc'
                              '--disable-werror')
    if [[ "${GRUB_EMU_BUILD}" == "1" ]];then
        _configure_options+=( '--enable-efiemu')
    else
        _configure_options+=( '--disable-efiemu')
    fi
    if [[ -n "$(pacman -Qq "freetype2" 2>/dev/null)" ]];then
        _configure_options+=( 'FREETYPE="pkg-config freetype2"' 'BUILD_FREETYPE="pkg-config freetype2"')
    fi
    
    ./configure "${_configure_options[@]}"
    
}

build() {
    cd "${srcdir}/grub-${pkgver}/"
    make
}

package() {
    cd "${srcdir}/grub-${pkgver}/"
    make DESTDIR="${pkgdir}/" bashcompletiondir="/usr/share/bash-completion/completions" install

    msg "Install /etc/default/grub (used by grub-mkconfig)"
    install -D -m0644 "${srcdir}/grub.default" "${pkgdir}/etc/default/grub"

    msg "Install grub.cfg for backup array"
    install -D -m0644 "${srcdir}/grub.cfg" "${pkgdir}/boot/grub/grub.cfg"
}

md5sums=('5aaca6713b47ca2456d8324a58755ac7'
         'SKIP'
         'af8a44e7d33b66ef54b2b5b497854b5e'
         'SKIP'
         'ade5b722dd17db2bac763cf1cc7a890e'
         'c8b9511586d57d6f2524ae7898397a46')
